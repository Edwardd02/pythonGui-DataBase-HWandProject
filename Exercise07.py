# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Exercise07.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import Exercise03
import Exercise05
from PyQt5.QtWidgets import QTableWidgetItem, QMessageBox

import mysql.connector

#############################################################
#                                                           #
#                       UI Generation                       #
#                                                           #
#############################################################

from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.twtMain = QtWidgets.QTabWidget(self.centralwidget)
        self.twtMain.setGeometry(QtCore.QRect(10, 0, 781, 541))
        self.twtMain.setObjectName("twtMain")
        self.tabCategories = QtWidgets.QWidget()
        self.tabCategories.setObjectName("tabCategories")
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.tabCategories)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(10, 10, 751, 501))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.tblCategories = QtWidgets.QTableWidget(self.horizontalLayoutWidget)
        self.tblCategories.setObjectName("tblCategories")
        self.tblCategories.setColumnCount(2)
        self.tblCategories.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tblCategories.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tblCategories.setHorizontalHeaderItem(1, item)
        self.horizontalLayout.addWidget(self.tblCategories)
        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.btnNewCategories = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.btnNewCategories.setObjectName("btnNewCategories")
        self.verticalLayout_4.addWidget(self.btnNewCategories)
        self.btnEditCategories = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.btnEditCategories.setObjectName("btnEditCategories")
        self.verticalLayout_4.addWidget(self.btnEditCategories)
        self.btnDeleteCategories = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.btnDeleteCategories.setObjectName("btnDeleteCategories")
        self.verticalLayout_4.addWidget(self.btnDeleteCategories)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_4.addItem(spacerItem)
        self.horizontalLayout.addLayout(self.verticalLayout_4)
        self.twtMain.addTab(self.tabCategories, "")
        self.tabExpenses = QtWidgets.QWidget()
        self.tabExpenses.setObjectName("tabExpenses")
        self.horizontalLayoutWidget_2 = QtWidgets.QWidget(self.tabExpenses)
        self.horizontalLayoutWidget_2.setGeometry(QtCore.QRect(10, 10, 751, 501))
        self.horizontalLayoutWidget_2.setObjectName("horizontalLayoutWidget_2")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_2)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.tblExpenses = QtWidgets.QTableWidget(self.horizontalLayoutWidget_2)
        self.tblExpenses.setObjectName("tblExpenses")
        self.tblExpenses.setColumnCount(6)
        self.tblExpenses.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tblExpenses.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tblExpenses.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tblExpenses.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tblExpenses.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tblExpenses.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tblExpenses.setHorizontalHeaderItem(5, item)
        self.horizontalLayout_2.addWidget(self.tblExpenses)
        self.verticalLayout_5 = QtWidgets.QVBoxLayout()
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.btnNewExpenses = QtWidgets.QPushButton(self.horizontalLayoutWidget_2)
        self.btnNewExpenses.setObjectName("btnNewExpenses")
        self.verticalLayout_5.addWidget(self.btnNewExpenses)
        self.btnEditExpenses = QtWidgets.QPushButton(self.horizontalLayoutWidget_2)
        self.btnEditExpenses.setObjectName("btnEditExpenses")
        self.verticalLayout_5.addWidget(self.btnEditExpenses)
        self.BtnDeleteExpenses = QtWidgets.QPushButton(self.horizontalLayoutWidget_2)
        self.BtnDeleteExpenses.setObjectName("BtnDeleteExpenses")
        self.verticalLayout_5.addWidget(self.BtnDeleteExpenses)
        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_5.addItem(spacerItem1)
        self.horizontalLayout_2.addLayout(self.verticalLayout_5)
        self.twtMain.addTab(self.tabExpenses, "")
        self.tabReports = QtWidgets.QWidget()
        self.tabReports.setObjectName("tabReports")
        self.horizontalLayoutWidget_3 = QtWidgets.QWidget(self.tabReports)
        self.horizontalLayoutWidget_3.setGeometry(QtCore.QRect(10, 10, 671, 501))
        self.horizontalLayoutWidget_3.setObjectName("horizontalLayoutWidget_3")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_3)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.tblExpenses_2 = QtWidgets.QTableWidget(self.horizontalLayoutWidget_3)
        self.tblExpenses_2.setObjectName("tblExpenses_2")
        self.tblExpenses_2.setColumnCount(2)
        self.tblExpenses_2.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tblExpenses_2.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tblExpenses_2.setHorizontalHeaderItem(1, item)
        self.horizontalLayout_3.addWidget(self.tblExpenses_2)
        self.twtMain.addTab(self.tabReports, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 24))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.twtMain.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # Update UI Here
        self.initialSetup()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        item = self.tblCategories.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Category ID"))
        item = self.tblCategories.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Category"))
        self.btnNewCategories.setText(_translate("MainWindow", "New"))
        self.btnEditCategories.setText(_translate("MainWindow", "Edit"))
        self.btnDeleteCategories.setText(_translate("MainWindow", "Delete"))
        self.twtMain.setTabText(self.twtMain.indexOf(self.tabCategories), _translate("MainWindow", "Categories"))
        item = self.tblExpenses.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "New Column"))
        item = self.tblExpenses.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Category ID"))
        item = self.tblExpenses.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Expense Date"))
        item = self.tblExpenses.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Expense"))
        item = self.tblExpenses.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Amount"))
        item = self.tblExpenses.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "Notes"))
        self.btnNewExpenses.setText(_translate("MainWindow", "New"))
        self.btnEditExpenses.setText(_translate("MainWindow", "Edit"))
        self.BtnDeleteExpenses.setText(_translate("MainWindow", "Delete"))
        self.twtMain.setTabText(self.twtMain.indexOf(self.tabExpenses), _translate("MainWindow", "Expenses"))
        item = self.tblExpenses_2.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Category"))
        item = self.tblExpenses_2.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Total Expenses"))
        self.twtMain.setTabText(self.twtMain.indexOf(self.tabReports), _translate("MainWindow", "Reports"))

    ##################### End UI Generation ###################

    def initialSetup(self):
        self.setupEvents()
        self.setupDatabase()


    #############################################################
    #                                                           #
    #                          Events                           #
    #                                                           #
    #############################################################
    def setupEvents(self):
        self.btnNewCategories.clicked.connect(self.btnNewCategories_clicked)
        self.btnEditCategories.clicked.connect(self.btnEditCategories_clicked)
        self.btnDeleteCategories.clicked.connect(self.btnDeleteCategories_clicked)

    def btnNewCategories_clicked(self):
        Dialog = QtWidgets.QDialog()
        form = Exercise03.Ui_Dialog()
        form.setupUi(Dialog, None)  # None -> no list, o need to send data when creating a new record
        result = Dialog.exec_()

        if result == 1:  # This means user clicked OK
            # Get the list of results from the dialog
            listValues = form.getValues()

            # Insert in database
            self.insert(listValues)

            # Requery
            self.refresh()

    def btnEditCategories_clicked(self):
        # Get data from the selected row
        currentRow = self.tblCategories.currentRow()

        if currentRow == -1:  # No row selected
            QMessageBox.warning(None, "Select Row", "Please select row first")
            return

        listValues = []
        listValues.append(self.tblCategories.item(currentRow, 0).text())
        listValues.append(self.tblCategories.item(currentRow, 1).text())

        Dialog = QtWidgets.QDialog()
        form = Exercise03.Ui_Dialog()
        form.setupUi(Dialog, listValues)  # None -> no list, o need to send data when creating a new record
        result = Dialog.exec_()

        if result == 1:  # This means user clicked OK
            # Get the list of results from the dialog
            listValues = form.getValues()

            # Update in database
            self.update(listValues)

            # Requery
            self.refresh()

    def btnDeleteCategories_clicked(self):
        # Delete selected row
        currentRow = self.tblCategories.currentRow()

        if currentRow == -1:  # No row selected
            QMessageBox.warning(None, "Select Row", "Please select row first")
            return

        answer = QMessageBox.question(
            None,
            "Delete row?",
            "Are you sure you want to delete this row?",
            QMessageBox.StandardButton.Yes |
            QMessageBox.StandardButton.No
        )

        # Check if user clicked Yes button
        if answer == QMessageBox.StandardButton.Yes:
            ID = self.tblCategories.item(currentRow, 0).text()

            # Delete from database
            self.delete(ID)

            # Requery
            self.refresh()

    #############################################################
    #                                                           #
    #                          Database                         #
    #                                                           #
    #############################################################

    def setupDatabase(self):
        self.connect()
        self.refresh()

    def connect(self):
        self.cnx = mysql.connector.connect(user = "root",
                                           password = "TODO: Add your password here",
                                           host = "127.0.0.1",
                                           database = "homework04")
    def refresh(self):
        # Empty table view
        self.tblCategories.setRowCount(0)

        cursor = self.cnx.cursor()

        query = "Select * From Categories"

        cursor.execute(query)

        for(category_ID, category) in cursor:  # Field ames in DB
            # Insert values in GUI table
            rowCount = self.tblCategories.rowCount()
            self.tblCategories.insertRow(rowCount)
            self.tblCategories.setItem(rowCount, 0, QTableWidgetItem(str(category_ID)))
            self.tblCategories.setItem(rowCount, 1, QTableWidgetItem(category))

        cursor.close()


    def insert(self, a_listValues):
        cursor = self.cnx.cursor()

        query = ("Insert Into Categories "
                 "(category)"
                 "Values (%s)")

        values = (a_listValues[1], )

        cursor.execute(query, values)

        # Make sure data is committed to the database
        self.cnx.commit()

        cursor.close()

    def update(self, a_listValues):
        cursor = self.cnx.cursor()

        query = ("Update Categories "
                 "Set category = %s"
                 "Where category_ID = %s")

        a_listValues = [a_listValues[1], a_listValues[0]]
        values = a_listValues

        cursor.execute(query, values)

        # Make sure data is committed to the database
        self.cnx.commit()

        cursor.close()

    def delete(self, a_ID):
        cursor = self.cnx.cursor()

        query = ("Delete from Categories "
                 "Where category_ID = %s")

        values = []
        values.append(a_ID)
        cursor.execute(query, values)

        # Make sure data is committed to the database
        self.cnx.commit()

        cursor.close()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
